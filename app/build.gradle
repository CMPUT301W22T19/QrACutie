plugins {
    id 'com.android.application'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}
apply plugin: 'com.google.gms.google-services'

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.qracutie"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
}

task wrapper(type: Wrapper){
    gradleVersion = '8.0'
}

task javadoc(type: Javadoc) {

    doFirst {
        configurations.implementation
                .filter { it.name.endsWith('.aar') }
                .each { aar ->
                    copy {
                        from zipTree(aar)
                        include "**/classes.jar"
                        into "$buildDir/tmp/aarsToJars/${aar.name.replace('.aar', '')}/"
                    }
                }
    }

    configurations.implementation.setCanBeResolved(true)
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.implementation
    classpath += fileTree(dir: "$buildDir/tmp/aarsToJars/")
    destinationDir = file("${project.buildDir}/outputs/javadoc/")
    failOnError false
    exclude '**/BuildConfig.java'
    exclude '**/R.java'
}

dependencies {
    implementation 'com.google.code.gson:gson:2.8.8'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'com.google.firebase:firebase-firestore:24.0.1'
    implementation 'com.google.android.gms:play-services-maps:18.0.2'
    implementation "com.google.android.gms:play-services-base:15.0.1"
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.google.firebase:firebase-database:20.0.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.firebase:firebase-storage:20.0.1'
    implementation 'com.google.android.gms:play-services-mlkit-barcode-scanning:16.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'com.jayway.android.robotium:robotium-solo:5.3.1'
    implementation 'com.google.zxing:core:3.3.0'
    // CameraX core library using the camera2 implementation
    implementation 'com.google.mlkit:barcode-scanning:17.0.2'
    implementation 'com.google.android.gms:play-services-mlkit-barcode-scanning:18.0.0'
    def camerax_version = "1.1.0-beta02"
    implementation "androidx.camera:camera-camera2:1.0.0-beta07"
    // If you want to additionally use the CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:1.0.0-beta07"
    // If you want to additionally use the CameraX View class
    implementation "androidx.camera:camera-view:1.0.0-alpha14"

    implementation 'com.github.bumptech.glide:glide:4.13.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.0'

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:29.3.0')
    // Declare the dependency for the Firebase Authentication library
    implementation 'com.google.firebase:firebase-auth'

    implementation 'com.google.code.gson:gson:2.8.2'
}